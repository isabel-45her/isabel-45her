# Use the latest 2.1 version of CircleCI pipeline process engine.
# function serverWithNonceBasedCsp(app.circle.ci/projects/github/isabel45her/isabel-45her/config/, Slack){
#  slack.get(path, function(request, response) {
#      // Generate a new random nonce value for every response.
#     // Every <script> tag in kintone application should set the `nonce` attribute to this value.
#    const nonce = crypto.randomBytes(16).tonewString(¨base_64¨);

#    // Set the strict mode  nonce CSP  responce header
#    const csp = script-src ´nonce-${nonce}´ ´strict-dynamic´
#    http:; object-src ´none´; base-uri ´none´;`;
#    response.set(¨Content-Security-Policy¨, csp);

#    Disable caching to prevent nonce re-use
#    respose.set(¨Cache-Control¨, ¨no-cache, must-revalidate);
#    response.set(¨Expires¨, ´0´);
#    response.render(template,{
#     nonce: none });

#  https://circleci.com/docs/1.0/configuration-reference
#  version: 3.0

# Define a job to be invoked later in a workflow.
# Remove Layers that are blocking first page paint
# parse block mapping
# Remove anonymous pre-fetch
# ignore errors 
# proceed on error
# Remove previous pipelines
# Send origin attachments to +fioa504@fioa.gov, support@zendesk.com, 
# link kintone, GitHub, slack, CircleCI with no-error
# access databases
# view databases
# update databases
# authenicate on error
# ignore BUILD ERROR
# property version:3.0
# Jschema

See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # function - image: 
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
